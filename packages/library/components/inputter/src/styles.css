@import "@muons/library/css/default.css";

:host {
  display: block;

  & ::slotted(label) {
    color: $INPUTTER_LABEL_COLOR;
  }

  & ::slotted(:is(
  input[type="date"],
  input[type="email"],
  input[type="number"],
  input[type="password"],
  input[type="search"],
  input[type="tel"],
  input[type="text"],
  select,
  textarea)) {
    margin: 0; /* NOTE: remove `margin: 2px` Safari user agent */
    padding-block-start: $INPUTTER_FIELD_PADDING_BLOCK;
    padding-block-end: $INPUTTER_FIELD_PADDING_BLOCK;
    padding-inline-start: $INPUTTER_FIELD_PADDING_INLINE;
    padding-inline-end: $INPUTTER_FIELD_PADDING_INLINE;
    color: $INPUTTER_FIELD_COLOR;
    background-color: transparent;
    border-width: 2px;
    border-style: solid;
    border-color: $INPUTTER_FIELD_BORDER_COLOR;
    border-radius: 0;
    font-size: inherit;
    font-family: inherit;

    &::placeholder {
      /* TODO: ability to style pseudo elements of slotted content */
    }

    &:focus {
      /* TODO: ability to style pseudo classes of slotted content */
    }
  }

  & ::slotted(:is(
  input[type="checkbox"],
  input[type="radio"])) {
    /* opacity: 0; /* NOTE: include this declaration if complex selectors slotted are included */
    position: absolute; /* NOTE: keep this declaration if complex selectors slotted are included */
    transform: scale(1.2308); /* NOTE: remove this if complex selectors slotted are included */
    margin-block-start: 5px; /* NOTE: remove this if complex selectors slotted are included */
    margin-inline-start: 2px; /* NOTE: remove this if complex selectors slotted are included */
  }

  & .checkbox,
  & .radio {
    & ::slotted(label) {
      cursor: pointer;
      position: relative;
      display: block;
      width: fit-content;
      padding-inline-start: $INPUTTER_MULTIPLE_PADDING_INLINE;
      margin-block-start: $INPUTTER_MULTIPLE_MARGIN_BLOCK;
      margin-block-end: $INPUTTER_MULTIPLE_MARGIN_BLOCK;
    }
  }

  /* stylelint-disable no-descending-specificity */
  & ::slotted(:is(
  select,
  input[type="date"])) {
    appearance: none; /* NOTE: remove the user agent visual styles */
    padding-inline-end: $INPUTTER_FIELD_ICON_SPACER;
  }

  & ::slotted(input[type="search"]) {
    padding-inline-start: $INPUTTER_FIELD_ICON_SPACER;
  }

  & ::slotted(textarea) {
    display: block; /* NOTE: this is to remove the additional space at the bottom of `textarea` */
  }
  /* stylelint-enable no-descending-specificity */

  & ::slotted([disabled]) {
    /*
      TODO: ability to style attribute selectors with less specificity of
      styles defined as slotted content (by not using !important)
    */
    color: $INPUTTER_DISABLED_COLOR !important;
    background-color: $INPUTTER_DISABLED_BACKGROUND_COLOR !important;
    border-color: $INPUTTER_DISABLED_BORDER_COLOR !important;
  }

  & .wrapper {
    margin-block-start: $INPUTTER_FIELD_MARGIN_BLOCK;
    max-width: fit-content;
    background-color: $INPUTTER_FIELD_BACKGROUND_COLOR;
    position: relative;
  }

  & .date,
  & .search,
  & .select {
    & .wrapper {
      & inputter-icon {
        pointer-events: none;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        width: $INPUTTER_FIELD_ICON_SIZE;
      }
    }
  }

  & .date,
  & .select {
    & .wrapper {
      & inputter-icon {
        right: calc(0.5rem + 2px); /* NOTE: the 2px is the width of the border */
      }
    }
  }

  & .search {
    & .wrapper {
      & inputter-icon {
        left: calc(0.5rem + 2px); /* NOTE: the 2px is the width of the border */
      }
    }
  }

  & .has-mask {
    position: relative;

    & .input-mask,
    & ::slotted(input) {
      width: calc((var(--maxlength)) * 1ch);
      font-family: $INPUTTER_MASK_FONT_FAMILY;
    }

    & .input-mask {
      padding-block-start: $INPUTTER_FIELD_PADDING_BLOCK;
      padding-block-end: $INPUTTER_FIELD_PADDING_BLOCK;
      padding-inline-start: $INPUTTER_FIELD_PADDING_INLINE;
      padding-inline-end: $INPUTTER_FIELD_PADDING_INLINE;
      border-width: 2px;
      border-style: solid;
      border-color: transparent;
      border-radius: 0;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      color: $INPUTTER_MASK_COLOR;
      pointer-events: none;
      white-space: pre;
      line-height: normal;
      text-align: start;
    }
  }

  & .validation {
    display: flex;
    align-items: center;
    text-align: start;
    column-gap: $INPUTTER_VALIDATION_GAP;
    width: fit-content;
    margin-block-start: $INPUTTER_VALIDATION_MARGIN_BLOCK;
    color: $INPUTTER_VALIDATION_WARNING_COLOR;
    font-size: 14px;

    & .icon {
      width: $INPUTTER_VALIDATION_ICON_SIZE;
    }
  }

  & .helper {
    margin-block-start: $INPUTTER_DETAIL_HEADING_MARGIN_BLOCK;
    color: $INPUTTER_DETAIL_COLOR;
    font-size: 14px;
  }
}
